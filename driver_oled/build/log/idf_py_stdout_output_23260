[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\altium_and_source_projects\Health_monitoring\driver_oled\build\bootloader\esp-idf\esptool_py && D:\esp\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe D:/esp/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/altium_and_source_projects/Health_monitoring/driver_oled/build/bootloader/bootloader.bin"
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/driver_oled.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable driver_oled.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/altium_and_source_projects/Health_monitoring/driver_oled/build/driver_oled.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\altium_and_source_projects\Health_monitoring\driver_oled\build\esp-idf\esptool_py && D:\esp\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe D:/esp/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/altium_and_source_projects/Health_monitoring/driver_oled/build/partition_table/partition-table.bin D:/altium_and_source_projects/Health_monitoring/driver_oled/build/driver_oled.bin"
driver_oled.bin binary size 0x32910 bytes. Smallest app partition is 0x100000 bytes. 0xcd6f0 bytes (80%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\esp\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && D:\esp\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=D:/esp/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=D:/esp/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;D:/esp/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/altium_and_source_projects/Health_monitoring/driver_oled/build -P D:/esp/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM37 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 driver_oled.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM37
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 30:c9:22:12:f2:4c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00042fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16385...
Writing at 0x00001000... (50 %)
Writing at 0x00007580... (100 %)
Wrote 25984 bytes (16385 compressed) at 0x00001000 in 0.8 seconds (effective 275.1 kbit/s)...
Hash of data verified.
Compressed 207120 bytes to 112801...
Writing at 0x00010000... (14 %)
Writing at 0x0001bbf5... (28 %)
Writing at 0x00022dc6... (42 %)
Writing at 0x00028ed2... (57 %)
Writing at 0x0002edab... (71 %)
Writing at 0x0003721d... (85 %)
Writing at 0x0003cf2d... (100 %)
Wrote 207120 bytes (112801 compressed) at 0x00010000 in 2.8 seconds (effective 592.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 383.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
